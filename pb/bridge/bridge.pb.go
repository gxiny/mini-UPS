// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bridge.proto

/*
Package bridge is a generated protocol buffer package.

It is generated from these files:
	bridge.proto

It has these top-level messages:
	Item
	Package
	UCommands
	UResponses
	ACommands
	AResponses
	ResponsePackageId
	RequestTruck
	TruckArrival
	PackagesLoaded
*/
package bridge

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Item struct {
	ItemId           *int64  `protobuf:"varint,1,req,name=item_id" json:"item_id,omitempty"`
	Description      *string `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	Amount           *int32  `protobuf:"varint,3,req,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Item) GetItemId() int64 {
	if m != nil && m.ItemId != nil {
		return *m.ItemId
	}
	return 0
}

func (m *Item) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Item) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

type Package struct {
	WarehouseId      *int64  `protobuf:"varint,1,req,name=warehouse_id" json:"warehouse_id,omitempty"`
	TruckId          *int32  `protobuf:"varint,2,req,name=truck_id" json:"truck_id,omitempty"`
	UpsUserId        *int64  `protobuf:"varint,3,opt,name=ups_user_id" json:"ups_user_id,omitempty"`
	X                *int32  `protobuf:"varint,4,req,name=x" json:"x,omitempty"`
	Y                *int32  `protobuf:"varint,5,req,name=y" json:"y,omitempty"`
	Items            []*Item `protobuf:"bytes,6,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Package) Reset()                    { *m = Package{} }
func (m *Package) String() string            { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()               {}
func (*Package) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Package) GetWarehouseId() int64 {
	if m != nil && m.WarehouseId != nil {
		return *m.WarehouseId
	}
	return 0
}

func (m *Package) GetTruckId() int32 {
	if m != nil && m.TruckId != nil {
		return *m.TruckId
	}
	return 0
}

func (m *Package) GetUpsUserId() int64 {
	if m != nil && m.UpsUserId != nil {
		return *m.UpsUserId
	}
	return 0
}

func (m *Package) GetX() int32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Package) GetY() int32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Package) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type UCommands struct {
	PackageIdReq     []*Package      `protobuf:"bytes,1,rep,name=package_id_req" json:"package_id_req,omitempty"`
	TruckReq         *RequestTruck   `protobuf:"bytes,2,opt,name=truck_req" json:"truck_req,omitempty"`
	Loaded           *PackagesLoaded `protobuf:"bytes,3,opt,name=loaded" json:"loaded,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *UCommands) Reset()                    { *m = UCommands{} }
func (m *UCommands) String() string            { return proto.CompactTextString(m) }
func (*UCommands) ProtoMessage()               {}
func (*UCommands) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *UCommands) GetPackageIdReq() []*Package {
	if m != nil {
		return m.PackageIdReq
	}
	return nil
}

func (m *UCommands) GetTruckReq() *RequestTruck {
	if m != nil {
		return m.TruckReq
	}
	return nil
}

func (m *UCommands) GetLoaded() *PackagesLoaded {
	if m != nil {
		return m.Loaded
	}
	return nil
}

type UResponses struct {
	Error            *string              `protobuf:"bytes,1,req,name=error" json:"error,omitempty"`
	PackageIds       []*ResponsePackageId `protobuf:"bytes,2,rep,name=package_ids" json:"package_ids,omitempty"`
	Trucks           *TruckArrival        `protobuf:"bytes,3,opt,name=trucks" json:"trucks,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *UResponses) Reset()                    { *m = UResponses{} }
func (m *UResponses) String() string            { return proto.CompactTextString(m) }
func (*UResponses) ProtoMessage()               {}
func (*UResponses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UResponses) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

func (m *UResponses) GetPackageIds() []*ResponsePackageId {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *UResponses) GetTrucks() *TruckArrival {
	if m != nil {
		return m.Trucks
	}
	return nil
}

type ACommands struct {
	Arrival          *TruckArrival `protobuf:"bytes,1,opt,name=arrival" json:"arrival,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ACommands) Reset()                    { *m = ACommands{} }
func (m *ACommands) String() string            { return proto.CompactTextString(m) }
func (*ACommands) ProtoMessage()               {}
func (*ACommands) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ACommands) GetArrival() *TruckArrival {
	if m != nil {
		return m.Arrival
	}
	return nil
}

type AResponses struct {
	Error            *string `protobuf:"bytes,1,req,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AResponses) Reset()                    { *m = AResponses{} }
func (m *AResponses) String() string            { return proto.CompactTextString(m) }
func (*AResponses) ProtoMessage()               {}
func (*AResponses) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AResponses) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type ResponsePackageId struct {
	PackageId        *int64  `protobuf:"varint,1,req,name=package_id" json:"package_id,omitempty"`
	Error            *string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ResponsePackageId) Reset()                    { *m = ResponsePackageId{} }
func (m *ResponsePackageId) String() string            { return proto.CompactTextString(m) }
func (*ResponsePackageId) ProtoMessage()               {}
func (*ResponsePackageId) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ResponsePackageId) GetPackageId() int64 {
	if m != nil && m.PackageId != nil {
		return *m.PackageId
	}
	return 0
}

func (m *ResponsePackageId) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

type RequestTruck struct {
	WarehouseId      *int32 `protobuf:"varint,1,req,name=warehouse_id" json:"warehouse_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RequestTruck) Reset()                    { *m = RequestTruck{} }
func (m *RequestTruck) String() string            { return proto.CompactTextString(m) }
func (*RequestTruck) ProtoMessage()               {}
func (*RequestTruck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RequestTruck) GetWarehouseId() int32 {
	if m != nil && m.WarehouseId != nil {
		return *m.WarehouseId
	}
	return 0
}

type TruckArrival struct {
	TruckId          *int32 `protobuf:"varint,1,req,name=truck_id" json:"truck_id,omitempty"`
	WarehouseId      *int32 `protobuf:"varint,2,req,name=warehouse_id" json:"warehouse_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TruckArrival) Reset()                    { *m = TruckArrival{} }
func (m *TruckArrival) String() string            { return proto.CompactTextString(m) }
func (*TruckArrival) ProtoMessage()               {}
func (*TruckArrival) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *TruckArrival) GetTruckId() int32 {
	if m != nil && m.TruckId != nil {
		return *m.TruckId
	}
	return 0
}

func (m *TruckArrival) GetWarehouseId() int32 {
	if m != nil && m.WarehouseId != nil {
		return *m.WarehouseId
	}
	return 0
}

type PackagesLoaded struct {
	PackageIds       []int64 `protobuf:"varint,1,rep,name=package_ids" json:"package_ids,omitempty"`
	TruckId          *int32  `protobuf:"varint,2,req,name=truck_id" json:"truck_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PackagesLoaded) Reset()                    { *m = PackagesLoaded{} }
func (m *PackagesLoaded) String() string            { return proto.CompactTextString(m) }
func (*PackagesLoaded) ProtoMessage()               {}
func (*PackagesLoaded) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PackagesLoaded) GetPackageIds() []int64 {
	if m != nil {
		return m.PackageIds
	}
	return nil
}

func (m *PackagesLoaded) GetTruckId() int32 {
	if m != nil && m.TruckId != nil {
		return *m.TruckId
	}
	return 0
}

func init() {
	proto.RegisterType((*Item)(nil), "bridge.Item")
	proto.RegisterType((*Package)(nil), "bridge.Package")
	proto.RegisterType((*UCommands)(nil), "bridge.UCommands")
	proto.RegisterType((*UResponses)(nil), "bridge.UResponses")
	proto.RegisterType((*ACommands)(nil), "bridge.ACommands")
	proto.RegisterType((*AResponses)(nil), "bridge.AResponses")
	proto.RegisterType((*ResponsePackageId)(nil), "bridge.ResponsePackageId")
	proto.RegisterType((*RequestTruck)(nil), "bridge.RequestTruck")
	proto.RegisterType((*TruckArrival)(nil), "bridge.TruckArrival")
	proto.RegisterType((*PackagesLoaded)(nil), "bridge.PackagesLoaded")
}

func init() { proto.RegisterFile("bridge.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0xef, 0xd2, 0x30,
	0x14, 0xc7, 0xd3, 0xed, 0xb7, 0x61, 0xdf, 0x26, 0x68, 0x25, 0xa6, 0x86, 0xcb, 0xd2, 0xa0, 0xec,
	0xc4, 0x61, 0x07, 0xbc, 0x78, 0x21, 0x9e, 0x48, 0x3c, 0x18, 0x22, 0xe7, 0xa5, 0xb2, 0x06, 0x17,
	0xd8, 0x3a, 0xda, 0x4d, 0xe5, 0x0f, 0xf0, 0xff, 0x36, 0xed, 0x06, 0x03, 0xc1, 0xdf, 0x6d, 0xeb,
	0x7b, 0xdf, 0x6f, 0x3f, 0xef, 0xf5, 0x0b, 0xe1, 0x77, 0x95, 0x67, 0x3b, 0x31, 0xaf, 0x94, 0xac,
	0x25, 0xf1, 0xdb, 0x3f, 0xf6, 0x09, 0x9e, 0x56, 0xb5, 0x28, 0xc8, 0x08, 0x06, 0x79, 0x2d, 0x8a,
	0x34, 0xcf, 0x28, 0x8a, 0x9c, 0xd8, 0x25, 0x6f, 0x20, 0xc8, 0x84, 0xde, 0xaa, 0xbc, 0xaa, 0x73,
	0x59, 0x52, 0x27, 0x72, 0x62, 0x4c, 0x86, 0xe0, 0xf3, 0x42, 0x36, 0x65, 0x4d, 0xdd, 0xc8, 0x89,
	0x3d, 0x76, 0x82, 0xc1, 0x57, 0xbe, 0xdd, 0xf3, 0x9d, 0x20, 0x63, 0x08, 0x7f, 0x71, 0x25, 0x7e,
	0xc8, 0x46, 0x8b, 0xde, 0xe5, 0x15, 0xbc, 0xa8, 0x55, 0xb3, 0xdd, 0x9b, 0x13, 0x63, 0xe1, 0x19,
	0xdf, 0xa6, 0xd2, 0x69, 0xa3, 0x85, 0x32, 0x87, 0x6e, 0x84, 0x62, 0x97, 0x60, 0x40, 0xbf, 0xe9,
	0x93, 0xad, 0x63, 0x40, 0x27, 0xea, 0xd9, 0xcf, 0x09, 0x78, 0x86, 0x49, 0x53, 0x3f, 0x72, 0xe3,
	0x20, 0x09, 0xe7, 0xdd, 0x04, 0x06, 0x98, 0xfd, 0x41, 0x80, 0x37, 0x9f, 0x65, 0x51, 0xf0, 0x32,
	0xd3, 0x64, 0x06, 0xc3, 0xaa, 0x05, 0x49, 0xf3, 0x2c, 0x55, 0xe2, 0x48, 0x91, 0xd5, 0x8c, 0xce,
	0x9a, 0x33, 0xe6, 0x0c, 0x70, 0x0b, 0x64, 0x7a, 0x9c, 0x08, 0xc5, 0x41, 0x32, 0x3e, 0xf7, 0xac,
	0xc5, 0xb1, 0x11, 0xba, 0xfe, 0x66, 0xea, 0xe4, 0x03, 0xf8, 0x07, 0xc9, 0x33, 0xd1, 0x22, 0x06,
	0xc9, 0xdb, 0x7f, 0x9c, 0xf4, 0x17, 0x5b, 0x65, 0x47, 0x80, 0xcd, 0x5a, 0xe8, 0x4a, 0x96, 0x5a,
	0x68, 0xf2, 0x12, 0x3c, 0xa1, 0x94, 0x54, 0x76, 0x7c, 0x4c, 0xe6, 0x10, 0xf4, 0x58, 0x9a, 0x3a,
	0x96, 0xe9, 0x5d, 0x7f, 0x5f, 0x2b, 0xeb, 0x1c, 0x57, 0x19, 0x99, 0x82, 0x6f, 0xe9, 0x74, 0x77,
	0xe9, 0x05, 0xcd, 0x32, 0x2d, 0x95, 0xca, 0x7f, 0xf2, 0x03, 0x4b, 0x00, 0x2f, 0x2f, 0x93, 0xbf,
	0x87, 0x01, 0x6f, 0xcf, 0x29, 0x7a, 0x46, 0x33, 0x01, 0x58, 0xfe, 0x0f, 0x93, 0x2d, 0xe0, 0xf5,
	0x3d, 0x0b, 0x01, 0xe8, 0xd9, 0xbb, 0xe7, 0xbc, 0xe8, 0xcc, 0xe6, 0x30, 0x9b, 0x42, 0x78, 0xb3,
	0xb3, 0x47, 0x19, 0xf0, 0xd8, 0x02, 0xc2, 0x6b, 0x94, 0x9b, 0x4c, 0xd8, 0x8e, 0x3b, 0x9d, 0x4d,
	0x0a, 0xfb, 0x08, 0xc3, 0xdb, 0x5d, 0x9b, 0xec, 0x5c, 0xaf, 0xd3, 0x3c, 0xf1, 0x83, 0x88, 0xfd,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0xfd, 0xf1, 0xcb, 0x14, 0xea, 0x02, 0x00, 0x00,
}
